<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--namespace属性: 用于指定当前的映射文件和那个接口进行映射，需要指定接口文件的路径，需要标注包的完整路径结构-->
<mapper namespace="com.riverbeside.bilibili.mapper.UserMapper">
    <!--useGeneratedKeys属性:表示开启某个字段的值递增-->
    <!--keyProperty属性:表示将表中的哪个字段作为主键进行自增-->
    <insert id="insert" parameterType="com.riverbeside.bilibili.entity.User">
        INSERT INTO t_user(username, password, salt, phone, email, gender, avatar, is_delete, created_user,
                           created_time, modified_user, modified_time)
        VALUES (#{username}, #{password}, #{salt}, #{phone}, #{email}, #{gender}, #{avatar}, #{isDelete},
                #{createdUser}, #{createdTime}, #{modifiedUser}, #{modifiedTime})
    </insert>

    <!--select语句在执行的时候，查询的结果是一个对象，多个对象-->
    <!--
        resultType: 表示查询的结果集类型只需要指定对应映射类的类型，并且包含完整的类的路径
    -->
    <resultMap id="userMap" type="com.riverbeside.bilibili.entity.User">
        <id column="uid" property="uid"/>
        <result property="username" column="username"/>
        <result property="isDelete" column="is_delete"/>
        <result property="createdUser" column="created_user"/>
        <result property="createdTime" column="created_time"/>
        <result property="modifiedUser" column="modified_user"/>
        <result property="modifiedTime" column="modified_time"/>
    </resultMap>


    <select id="findUserName" resultMap="userMap">
        SELECT *
        FROM t_user
        WHERE username = #{userName}
    </select>

    <update id="updatePasswordByUid">
        update t_user
        set password=#{password},
            modified_user=#{modifiedUser},
            modified_time=#{modifiedTime}
        where uid = #{uid}
    </update>

    <select id="findByUid" resultMap="userMap">
        select *
        from t_user
        where uid = #{uid}
    </select>

    <update id="updateInform">
        update t_user
        set
            <if test="email!=null">email=#{email},</if>
            <if test="phone!=null"> phone=#{phone},</if>
            <if test="gender!=null">gender=#{gender}, </if>
            modified_user=#{modifiedUser},
            modified_time=#{modifiedTime}
        where uid = #{uid}
    </update>

    <update id="updateAvatarByUid">
        update t_user
        set
            <if test="avatar!=null">avatar=#{avatar},</if>
            modified_user=#{modifiedUser},
            modified_time=#{modifiedTime}
        where
            uid=#{uid}
    </update>

</mapper>